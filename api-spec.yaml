openapi: 3.0.0

info:
  description: API specification for the Slim Jim's website
  version: 0.1.0
  title: Slim Jim's
  contact:
    email: georgeaholden@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  # Entities
  - name: 'Users'
    description: 'Grouping of endpoints related to the User entity'

paths:
  '/login':
    post:
      tags:
      - 'Users'
      summary: Attempt to authenticate a user account with a username and password
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Username of account for login attempt
                  example: jog
                password:
                  type: string
                  format: hash
                  description: sha256 hash
                  example: '008c70392e3abfbd0fa47bbc2ed96aa99bd49e159727fcba0f2e6abeb3a9d601'
      responses:
        '200':
          $ref: '#/components/responses/AuthenticatedResponse'
        '400':
          description: Failed login attempt, email or password incorrect

  '/users':
    post:
      tags:
        - 'Users'
      summary: Create a new user account
      security: []
      responses:
        '201':
          $ref: '#/components/responses/AuthenticatedResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '409':
          description: Email address already in use
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: New user account data, id will be generated automatically by the server

  '/users/{id}':
    get:
      tags:
        - 'Users'
      summary: Retrieve a specific user account
      security:
        - CookieAuth:
          - user
          - globalApplicationAdmin
          - defaultGlobalApplicationAdmin
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Account retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '406':
          $ref: '#/components/responses/NotAcceptableError'

components:
  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID
  responses:
    BadRequestError:
      description: There was some error with the data supplied by the user, appropriate error message(s) should be shown to user
    UnauthorizedError:
      description: Access token is missing or invalid
    ForbiddenError:
      description: The user does not have permission to perform the requested action
    NotAcceptableError:
      description: 'The requested route does exist (so not a 404) but some part of the request is not acceptable, for example trying to access a resource by an ID that does not exist.'
    AuthenticatedResponse:
      description: >
        Response returned upon successful authentication.
        This response includes a session token that the client can use in future API requests to authenticate itself.
        This session token is set as a cookie with name 'X-Authorization', and will need to be included in subsequent requests to the server.
      content:
        application/json:
          schema:
            type: object
            properties:
              userId:
                type: integer
                description: The ID of the user that has just been authenticated
                example: 100
      headers:
        Set-Cookie:
          schema:
            type: string
            example: JSESSIONID=abcde12345; Path=/; HttpOnly

  schemas:
    Address:
      type: object
      description: Entity representing some physical address
      required:
        - country
      properties:
        streetNumber:
          type: string
          example: '3/24'
        streetName:
          type: string
          example: 'Ilam Road'
        suburb:
          type: string
          example: 'Upper Riccarton'
        city:
          type: string
          example: 'Christchurch'
        region:
          type: string
          example: 'Canterbury'
        country:
          type: string
          example: 'New Zealand'
        postcode:
          type: string
          example: '90210'

    User:
      type: object
      description: Basic user entity
      required:
        - firstName
        - lastName
        - email
        - dateOfBirth
        - homeAddress
        - password
      properties:
        id:
          type: integer
          example: 100
          readOnly: true
          description: Automatically generated and assigned by the server
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Smith
        middleName:
          type: string
          example: Hector
        nickname:
          type: string
          example: Jonny
        bio:
          type: string
          example: Likes long walks on the beach
        email:
          type: string
          format: email
          example: johnsmith99@gmail.com
        dateOfBirth:
          type: string
          format: date
          example: '1999-04-27'
        phoneNumber:
          type: string
          example: '+64 3 555 0129'
        homeAddress:
          $ref: '#/components/schemas/Address'
        password:
          type: string
          example: '1337-H%nt3r2'
          format: password
          writeOnly: true
          description: Should not be stored in plain text (i.e hash it)
        created:
          type: string
          format: date-time
          example: '2020-07-14T14:32:00Z'
          readOnly: true
          description: Date and time when the account was created